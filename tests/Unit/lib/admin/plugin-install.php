<?php
/**
 * Genesis Framework.
 *
 * WARNING: This file is part of the core Genesis Framework. DO NOT edit this file under any circumstances.
 * Please do all modifications in the form of a child theme.
 *
 * @package StudioPress\Genesis
 * @author  StudioPress
 * @license GPL-2.0-or-later
 * @link    https://my.studiopress.com/themes/genesis/
 */

namespace StudioPress\Genesis\Tests\Unit;

use Brain\Monkey\Functions;
use Mockery;

/**
 * Test admin-functions.php
 *
 * @group admin
 */
class Admin extends TestCase {

	/**
	 * Test that data_genesis_admin_plugins_api_result() properly sorts the $response.
	 *
	 * @covers ::genesis_admin_plugins_api_result
	 * @dataProvider data_genesis_admin_plugins_api_result
	 *
	 * @param array  $input    An array of plugins to be sorted.
	 * @param string $author   The author.
	 * @param array  $expected The expected result of a sort.
	 */
	public function test_genesis_admin_plugins_api_result( $input, $author, $expected ) {

		// Make $result an object.
		$result          = new \stdClass();
		$result->plugins = $input;

		// Make $args an object.
		$args         = new \stdClass();
		$args->author = $author;

		$filtered = \genesis_admin_plugins_api_result( $result, '', $args );
		$actual   = $filtered->plugins;

		self::assertEquals( $expected, $actual );

	}

	/**
	 * Data provider for testing if version strings are considered a major version under Genesis rules.
	 *
	 * @return array
	 */
	public function data_genesis_admin_plugins_api_result() {

		// WordPress 5.1+ fetches plugin data as arrays.
		$plugins = [
			[
				'slug'            => 'genesis-simple-hooks',
				'active_installs' => '80000',
			],
			[
				'slug'            => 'genesis-simple-edits',
				'active_installs' => '200000',
			],
			[
				'slug'            => 'genesis-simple-sidebars',
				'active_installs' => '100000',
			],
			[
				'slug'            => 'atomic-blocks',
				'active_installs' => '10000',
			],
		];

		// WordPress < 5.1 uses the 1.0 API endpoint, which returns plugin data as objects.
		$plugin_objects = array_map(
			static function( $a ) {
				return (object) $a;
			},
			$plugins
		);

		$expected_sort_order = [
			[
				'slug'            => 'atomic-blocks',
				'active_installs' => '10000',
			],
			[
				'slug'            => 'genesis-simple-edits',
				'active_installs' => '200000',
			],
			[
				'slug'            => 'genesis-simple-sidebars',
				'active_installs' => '100000',
			],
			[
				'slug'            => 'genesis-simple-hooks',
				'active_installs' => '80000',
			],
		];

		return [
			'Author not "studiopress"' => [
				$plugins,
				'nathanrice',
				$plugins, // Sort order unchanged if not viewing plugins by the 'studiopress' author.
			],
			'Plugin data as array, sorted by install count, Atomic Blocks as top result' => [
				$plugins,
				'studiopress',
				$expected_sort_order,
			],
			'Plugin data as object, sorted by install count, Atomic Blocks as top result' => [
				$plugin_objects,
				'studiopress',
				array_map(
					static function( $a ) {
						return (object) $a;
					},
					$expected_sort_order
				),
			],
		];
	}
}
