<?php
/**
 * Genesis Framework.
 *
 * WARNING: This file is part of the core Genesis Framework. DO NOT edit this file under any circumstances.
 * Please do all modifications in the form of a child theme.
 *
 * @package StudioPress\Genesis\Tests\System
 * @author  XWP, Google, StudioPress, and contributors
 * @license GPL-2.0-or-later
 * @link    https://github.com/studiopress/genesis-amp
 */

namespace StudioPress\Genesis\Tests\System;

use Brain\Monkey\Functions;
use StudioPress\Genesis\Upgrade\Upgrade_DB_2603 as Upgrader;

/**
 * Test Upgrade_DB_2603.
 */
class Upgrade_DB_2603_Test extends TestCase {
	/**
	 * Test that scripts get unslashed.
	 */
	public function test_unslash_post_meta_scripts() {
		// phpcs:disable WordPress.WP.EnqueuedResources.NonEnqueuedScript
		$slashed_script = <<<'SCRIPT'
<script src=\"https://example.com\"></script>
<script>
var re = new RegExp(\'\\\\w+\');
</script>
SCRIPT;

		$unslashed_script = <<<'SCRIPT'
<script src="https://example.com"></script>
<script>
var re = new RegExp('\\w+');
</script>
SCRIPT;
		// phpcs:enable WordPress.WP.EnqueuedResources.NonEnqueuedScript

		// Create a post.
		$id = $this->factory->post->create();

		// Can't use add_post_meta() here, as that unslashes values anyway.
		global $wpdb;

		// phpcs:disable WordPress.DB.DirectDatabaseQuery

		$wpdb->query(
			$wpdb->prepare(
				"INSERT INTO $wpdb->postmeta (post_id, meta_key, meta_value) VALUES ( %s, %s, %s )",
				$id,
				'_genesis_scripts',
				$slashed_script
			)
		);
		$wpdb->query(
			$wpdb->prepare(
				"INSERT INTO $wpdb->postmeta (post_id, meta_key, meta_value) VALUES ( %s, %s, %s )",
				$id,
				'_genesis_scripts_body',
				$slashed_script
			)
		);

		// phpcs:enable WordPress.DB.DirectDatabaseQuery

		// Double check that inserted scripts are still slashed.
		self::assertEquals( get_post_meta( $id, '_genesis_scripts', true ), $slashed_script );
		self::assertEquals( genesis_get_custom_field( '_genesis_scripts', $id ), $slashed_script );

		self::assertEquals( get_post_meta( $id, '_genesis_scripts_body', true ), $slashed_script );
		self::assertEquals( genesis_get_custom_field( '_genesis_scripts_body', $id ), $slashed_script );

		// Fix slashed scripts.
		( new Upgrader() )->unslash_post_meta_scripts();

		self::assertEquals( get_post_meta( $id, '_genesis_scripts', true ), $unslashed_script );
		self::assertEquals( genesis_get_custom_field( '_genesis_scripts', $id ), $unslashed_script );

		self::assertEquals( get_post_meta( $id, '_genesis_scripts_body', true ), $unslashed_script );
		self::assertEquals( genesis_get_custom_field( '_genesis_scripts_body', $id ), $unslashed_script );
	}
}
