<?php
/**
 * Genesis Framework.
 *
 * WARNING: This file is part of the core Genesis Framework. DO NOT edit this file under any circumstances.
 * Please do all modifications in the form of a child theme.
 *
 * @package StudioPress\Genesis\Tests\System
 * @author  XWP, Google, StudioPress, and contributors
 * @license GPL-2.0-or-later
 * @link    https://github.com/studiopress/genesis-amp
 */

namespace StudioPress\Genesis\Tests\System;

use Brain\Monkey\Functions;
use Genesis_Menu;
use Genesis_Menu_Handler;
use WP_Scripts;

/**
 * Test Genesis Menu.
 *
 * @group amp
 */
class Genesis_Menu_Test extends TestCase {

	/**
	 * Holds wp_scripts global.
	 *
	 * @var WP_Scripts
	 */
	protected $old_wp_scripts;

	/**
	 * Menu configuration.
	 *
	 * @var array
	 */
	protected $config;

	/**
	 * Prepares the test environment before each test.
	 */
	public function setUp() {
		parent::setUp();
		require_once GENESIS_THEME_DIR . '/lib/classes/class-genesis-menu.php';

		$this->old_wp_scripts = isset( $GLOBALS['wp_scripts'] ) ? $GLOBALS['wp_scripts'] : null;
		remove_action( 'wp_default_scripts', 'wp_default_scripts' );
		$GLOBALS['wp_scripts']                  = new WP_Scripts(); // phpcs:ignore WordPress.WP.GlobalVariablesOverride.Prohibited
		$GLOBALS['wp_scripts']->default_version = get_bloginfo( 'version' );

		$this->config = Genesis_Menu_Handler::init_config(
			[
				'script' => [
					'menuClasses' => [
						'combine' => [
							'.nav-primary',
							'.nav-secondary',
						],
					],
				],
			]
		)['script'];
	}

	/**
	 * Cleans up the test environment after each test.
	 */
	public function tearDown() {
		$GLOBALS['wp_scripts'] = $this->old_wp_scripts; // phpcs:ignore WordPress.WP.GlobalVariablesOverride.Prohibited
		add_action( 'wp_default_scripts', 'wp_default_scripts' );
		parent::tearDown();
	}

	/**
	 * Test hooks are added.
	 */
	public function test_add_hooks() {
		$menu = new Genesis_Menu( 'amp-foo', $this->config );
		$menu->add_hooks();

		self::assertEquals( 10, has_action( 'wp_enqueue_scripts', [ $menu, 'enqueue_scripts' ] ) );
	}

	/**
	 * Test scripts are enqueued.
	 */
	public function test_scripts_are_enqueued() {
		global $wp_scripts;
		wp_default_scripts( $wp_scripts );

		$menu = new Genesis_Menu( 'amp-foo', $this->config );
		$menu->enqueue_scripts();

		$scripts = get_echo( 'wp_print_scripts' );

		$expected = 'var genesis_responsive_menu = {"mainMenu":"Menu","menuIconClass":"dashicons-before dashicons-menu","subMenu":"Submenu","subMenuIconClass":"dashicons-before dashicons-arrow-down-alt2","menuClasses":{"combine":[".nav-primary",".nav-secondary"]}};';
		$this->assertContains( $expected, $scripts );

		$script_url = home_url( 'wp-content/themes/genesis/lib/js/menu/responsive-menus.js' ) . '?ver=' . Genesis_Menu::SCRIPT_VERSION;
		$this->assertContains( $script_url, $scripts );
	}
}
