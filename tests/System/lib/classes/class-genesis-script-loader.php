<?php
/**
 * Genesis Framework.
 *
 * WARNING: This file is part of the core Genesis Framework. DO NOT edit this file under any circumstances.
 * Please do all modifications in the form of a child theme.
 *
 * @package Genesis\Tests
 * @author  StudioPress
 * @license GPL-2.0-or-later
 * @link    https://my.studiopress.com/themes/genesis/
 */

namespace StudioPress\Genesis\Tests\System;

use WP_Scripts;

/**
 * Test Genesis Script Loader class.
 *
 * @group settings
 * @group admin
 */
class Genesis_Script_Loader_Test extends TestCase {

	/**
	 * Holds wp_scripts global.
	 *
	 * @var WP_Scripts
	 */
	protected $old_wp_scripts;

	/**
	 * Prepares the test environment before each test.
	 */
	public function setUp() {
		parent::setUp();
		$this->old_wp_scripts = isset( $GLOBALS['wp_scripts'] ) ? $GLOBALS['wp_scripts'] : null;
		remove_action( 'wp_default_scripts', 'wp_default_scripts' );
		$GLOBALS['wp_scripts']                  = new WP_Scripts(); // phpcs:ignore WordPress.WP.GlobalVariablesOverride.Prohibited
		$GLOBALS['wp_scripts']->default_version = get_bloginfo( 'version' );
	}

	/**
	 * Cleans up the test environment after each test.
	 */
	public function tearDown() {
		$GLOBALS['wp_scripts'] = $this->old_wp_scripts; // phpcs:ignore WordPress.WP.GlobalVariablesOverride.Prohibited
		add_action( 'wp_default_scripts', 'wp_default_scripts' );
		parent::tearDown();
	}

	/**
	 * Test maybe_enable_attrs adds the async attribute to scripts.
	 */
	public function test_maybe_enable_attrs_adds_async() {
		wp_enqueue_script( 'async-no-deps', 'example.com?async=true', [], '1.4', false );
		wp_enqueue_script( 'no-deps', 'example.com', [], '1.6', false );
		$expected  = "<script type='text/javascript' async src='http://example.com?ver=1.4'></script>\n"; // phpcs:ignore WordPress.WP.EnqueuedResources.NonEnqueuedScript
		$expected .= "<script type='text/javascript' src='http://example.com?ver=1.6'></script>\n"; // phpcs:ignore WordPress.WP.EnqueuedResources.NonEnqueuedScript

		self::assertEquals( $expected, get_echo( 'wp_print_scripts' ) );

		// No scripts left to print.
		self::assertEmpty( get_echo( 'wp_print_scripts' ) );
	}

	/**
	 * Test maybe_enable_attrs adds the async attribute regardless of the position of the query arg.
	 */
	public function test_maybe_enable_attrs_adds_async_regardless_of_position_of_query_arg() {
		wp_enqueue_script( 'async-first-no-deps', 'example.com?async=true', [], '1.4', false );
		wp_enqueue_script( 'async-middle-no-deps', 'example.com?one=1&async=true&two=2', [], '1.5', false );
		wp_enqueue_script( 'async-last-no-deps', 'example.com?one=1&async=true', [], '1.6', false );
		$expected  = "<script type='text/javascript' async src='http://example.com?ver=1.4'></script>\n"; // phpcs:ignore WordPress.WP.EnqueuedResources.NonEnqueuedScript
		$expected .= "<script type='text/javascript' async src='http://example.com?one=1&#038;two=2&#038;ver=1.5'></script>\n"; // phpcs:ignore WordPress.WP.EnqueuedResources.NonEnqueuedScript
		$expected .= "<script type='text/javascript' async src='http://example.com?one=1&#038;ver=1.6'></script>\n"; // phpcs:ignore WordPress.WP.EnqueuedResources.NonEnqueuedScript

		self::assertEquals( $expected, get_echo( 'wp_print_scripts' ) );

		// No scripts left to print.
		self::assertEmpty( get_echo( 'wp_print_scripts' ) );
	}

	/**
	 * Test maybe_enable_attrs adds the defer attribute to scripts.
	 */
	public function test_maybe_enable_attrs_adds_defer() {
		wp_enqueue_script( 'defer-no-deps', 'example.com?defer=true', [], '1.4', false );
		wp_enqueue_script( 'no-deps', 'example.com', [], '1.6', false );
		$expected  = "<script type='text/javascript' defer src='http://example.com?ver=1.4'></script>\n"; // phpcs:ignore WordPress.WP.EnqueuedResources.NonEnqueuedScript
		$expected .= "<script type='text/javascript' src='http://example.com?ver=1.6'></script>\n"; // phpcs:ignore WordPress.WP.EnqueuedResources.NonEnqueuedScript

		self::assertEquals( $expected, get_echo( 'wp_print_scripts' ) );

		// No scripts left to print.
		self::assertEmpty( get_echo( 'wp_print_scripts' ) );
	}

	/**
	 * Test maybe_enable_attrs adds the defer attribute regardless of the position of the query arg.
	 */
	public function test_maybe_enable_attrs_adds_defer_regardless_of_position_of_query_arg() {
		wp_enqueue_script( 'defer-first-no-deps', 'example.com?defer=true', [], '1.4', false );
		wp_enqueue_script( 'defer-middle-no-deps', 'example.com?one=1&defer=true&two=2', [], '1.5', false );
		wp_enqueue_script( 'defer-last-no-deps', 'example.com?one=1&defer=true', [], '1.6', false );
		$expected  = "<script type='text/javascript' defer src='http://example.com?ver=1.4'></script>\n"; // phpcs:ignore WordPress.WP.EnqueuedResources.NonEnqueuedScript
		$expected .= "<script type='text/javascript' defer src='http://example.com?one=1&#038;two=2&#038;ver=1.5'></script>\n"; // phpcs:ignore WordPress.WP.EnqueuedResources.NonEnqueuedScript
		$expected .= "<script type='text/javascript' defer src='http://example.com?one=1&#038;ver=1.6'></script>\n"; // phpcs:ignore WordPress.WP.EnqueuedResources.NonEnqueuedScript

		self::assertEquals( $expected, get_echo( 'wp_print_scripts' ) );

		// No scripts left to print.
		self::assertEmpty( get_echo( 'wp_print_scripts' ) );
	}
}
