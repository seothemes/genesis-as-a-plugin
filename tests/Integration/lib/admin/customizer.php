<?php
/**
 * Genesis Framework.
 *
 * WARNING: This file is part of the core Genesis Framework. DO NOT edit this file under any circumstances.
 * Please do all modifications in the form of a child theme.
 *
 * @package Genesis\Tests
 * @author  StudioPress
 * @license GPL-2.0-or-later
 * @link    https://my.studiopress.com/themes/genesis/
 */

namespace StudioPress\Genesis\Tests\Integration;

use Brain\Monkey\Filters;
use Brain\Monkey\Functions;
use Mockery;
use Genesis_Customizer;

require_once PARENT_DIR . '/lib/admin/customizer.php';
require_once PARENT_DIR . '/lib/classes/class-genesis-customizer.php';

/**
 * Test Genesis Customizer functions.
 *
 * @group admin
 * @group customizer
 */
class Genesis_Customizer_Test extends TestCase {

	/**
	 * Mocked WP Customizer Manager
	 *
	 * @var \WP_Customize_Manager
	 */
	protected $mocked_wp_customize;

	/**
	 *  Prepares the test environment before each test.
	 */
	public function setUp() {
		Functions\stubs(
			[
				'__',
				'esc_html',
				'current_theme_supports'       => 'true',
				'get_theme_support'            => 'genesis-style-selector',
				'get_intermediate_image_sizes' => [ 1, 2 ],
				'absint',
				'get_option',
				'wp_parse_args',
			]
		);

		$this->mocked_wp_customize = Mockery::mock( 'WP_Customize_Manager' );
		$this->mocked_wp_customize->shouldReceive( 'add_panel', 'add_section', 'add_control', 'add_setting' );

		parent::setUp();
	}

	/**
	 * Test genesis_customize_register() initializes genesis_customizer and invokes the actions hooked to genesis_customizer.
	 */
	public function test_genesis_customize_register_initializes_and_invokes() {
		genesis_customize_register( $this->mocked_wp_customize );

		self::assertTrue( has_action( 'genesis_customizer', 'genesis_customizer_theme_settings' ) );
		self::assertTrue( has_action( 'genesis_customizer', 'genesis_customizer_seo_settings' ) );
	}

	/**
	 * Test genesis_customer_theme_settings() applies the genesis_customizer_theme_settings_config filter.
	 */
	public function test_genesis_customizer_theme_settings_applies_genesis_customizer_theme_settings_config_filter() {
		Filters\expectApplied( 'genesis_customizer_theme_settings_config' )
			->once()
			->with( Mockery::type( 'array' ) );

		Functions\when( 'get_template_directory' )->justReturn( GENESIS_THEME_DIR . '/tests/fixtures/test-configs/parent' );
		Functions\when( 'get_stylesheet_directory' )->justReturn( GENESIS_THEME_DIR . '/tests/fixtures/test-configs/child' );

		$genesis_customizer = new Genesis_Customizer( $this->mocked_wp_customize );

		genesis_customizer_theme_settings( $genesis_customizer );
	}

	/**
	 * Test genesis_customer_seo_settings() applies the genesis_customizer_seo_settings_config filter.
	 */
	public function test_genesis_customizer_seo_settings_applies_genesis_customizer_seo_settings_config_filter() {
		Filters\expectApplied( 'genesis_customizer_seo_settings_config' )
			->once()
			->with( Mockery::type( 'array' ) );

		Functions\when( 'get_template_directory' )->justReturn( GENESIS_THEME_DIR . '/tests/fixtures/test-configs/parent' );
		Functions\when( 'get_stylesheet_directory' )->justReturn( GENESIS_THEME_DIR . '/tests/fixtures/test-configs/child' );

		$genesis_customizer = new Genesis_Customizer( $this->mocked_wp_customize );

		genesis_customizer_seo_settings( $genesis_customizer );
	}
}
